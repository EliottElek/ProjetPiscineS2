{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eliot\\\\Documents\\\\DevWebING4\\\\front-end\\\\src\\\\components\\\\Container\\\\Channel\\\\Channel.js\";\nimport React from \"react\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport { List, Grid, ListItem, Typography } from \"@mui/material\";\nimport MessageForm from \"./MessageForm/MessageForm\";\nconst styles = {\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"blue\"\n  }\n};\n\nconst Channel = ({\n  messages,\n  channel,\n  addMessage\n}) => {\n  return /*#__PURE__*/React.createElement(Grid, {\n    sx: {\n      height: \"100%\"\n    },\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sx: 2,\n    md: 2,\n    lg: 2,\n    xl: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, channel.name)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sx: 8,\n    md: 8,\n    lg: 8,\n    xl: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    sx: {\n      width: \"100%\",\n      maxWidth: 360,\n      bgcolor: \"background.paper\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: message === null || message === void 0 ? void 0 : message.content\n      },\n      style: {\n        fontSize: \"15px\",\n        padding: 0,\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }),\n    secondary: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, message.creation),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sx: 2,\n    md: 2,\n    lg: 2,\n    xl: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MessageForm, {\n    addMessage: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Channel;","map":{"version":3,"sources":["C:/Users/eliot/Documents/DevWebING4/front-end/src/components/Container/Channel/Channel.js"],"names":["React","ListItemText","ListItemAvatar","List","Grid","ListItem","Typography","MessageForm","styles","root","width","height","backgroundColor","Channel","messages","channel","addMessage","name","maxWidth","bgcolor","map","message","__html","content","fontSize","padding","color","creation"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport { List, Grid, ListItem, Typography } from \"@mui/material\";\r\nimport MessageForm from \"./MessageForm/MessageForm\";\r\n\r\nconst styles = {\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"blue\",\r\n  },\r\n};\r\nconst Channel = ({ messages, channel, addMessage }) => {\r\n  return (\r\n    <Grid sx={{ height: \"100%\" }} container direction=\"column\">\r\n      <Grid item sx={2} md={2} lg={2} xl={2}>\r\n        <Typography>{channel.name}</Typography>\r\n      </Grid>\r\n      <Grid item sx={8} md={8} lg={8} xl={8}>\r\n        <List\r\n          sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\r\n        >\r\n          {messages?.map((message) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar></Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <div\r\n                    dangerouslySetInnerHTML={{ __html: message?.content }}\r\n                    style={{\r\n                      fontSize: \"15px\",\r\n                      padding: 0,\r\n                      color: \"black\",\r\n                    }}\r\n                  ></div>\r\n                }\r\n                secondary={\r\n                    <Typography variant ='body'>{message.creation}</Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n      <Grid item sx={2} md={2} lg={2} xl={2}>\r\n        <MessageForm addMessage={addMessage} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n"]},"metadata":{},"sourceType":"module"}