{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eliot\\\\Documents\\\\DevWebING4\\\\front-end\\\\src\\\\components\\\\Container\\\\Channel\\\\Channel.js\";\nimport React from \"react\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport { List, Grid, ListItem, Typography, Avatar } from \"@mui/material\";\nimport MessageForm from \"./MessageForm/MessageForm\";\nconst styles = {\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"blue\"\n  },\n  middleContainer: {\n    overflowY: \"auto\"\n  }\n};\n\nconst Channel = ({\n  messages,\n  channel,\n  addMessage\n}) => {\n  return /*#__PURE__*/React.createElement(Grid, {\n    sx: {\n      height: \"100vh\"\n    },\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    md: 1,\n    lg: 1,\n    xl: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, channel.name)), /*#__PURE__*/React.createElement(Grid, {\n    id: \"middleContainer\",\n    item: true,\n    xs: 9,\n    md: 9,\n    lg: 9,\n    xl: 9,\n    style: styles.middleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    sx: {\n      width: \"100%\",\n      bgcolor: \"background.paper\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, message.author),\n    secondary: /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"dangerouslySetInnerHTML=\", {\n      __html: message === null || message === void 0 ? void 0 : message.content\n    }, \"style=\", {\n      padding: 0,\n      color: \"black\"\n    }, \">\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    md: 2,\n    lg: 2,\n    xl: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MessageForm, {\n    addMessage: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Channel;","map":{"version":3,"sources":["C:/Users/eliot/Documents/DevWebING4/front-end/src/components/Container/Channel/Channel.js"],"names":["React","ListItemText","ListItemAvatar","List","Grid","ListItem","Typography","Avatar","MessageForm","styles","root","width","height","backgroundColor","middleContainer","overflowY","Channel","messages","channel","addMessage","name","bgcolor","map","message","author","__html","content","padding","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport { List, Grid, ListItem, Typography, Avatar } from \"@mui/material\";\r\nimport MessageForm from \"./MessageForm/MessageForm\";\r\n\r\nconst styles = {\r\n  root: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"blue\",\r\n  },\r\n  middleContainer: {\r\n    overflowY: \"auto\",\r\n  },\r\n};\r\nconst Channel = ({ messages, channel, addMessage }) => {\r\n  return (\r\n    <Grid sx={{ height: \"100vh\" }} container direction=\"column\">\r\n      <Grid item xs={1} md={1} lg={1} xl={1}>\r\n        <Typography variant=\"h5\">{channel.name}</Typography>\r\n      </Grid>\r\n      <Grid id=\"middleContainer\" item xs={9} md={9} lg={9} xl={9} style={styles.middleContainer}>\r\n        <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\r\n          {messages?.map((message) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar></Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography>{message.author}</Typography>\r\n                }\r\n                secondary={\r\n                    <Typography>\r\n                    dangerouslySetInnerHTML={{ __html: message?.content }}\r\n                    style={{\r\n                      padding: 0,\r\n                      color: \"black\",\r\n                    }}\r\n                  ></Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Grid>\r\n      <Grid item xs={2} md={2} lg={2} xl={2}>\r\n        <MessageForm addMessage={addMessage} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Channel;\r\n"]},"metadata":{},"sourceType":"module"}